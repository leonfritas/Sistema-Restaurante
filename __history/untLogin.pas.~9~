unit untLogin;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Mask, Vcl.ExtCtrls,
  Vcl.DBCtrls, Data.DB, Data.Win.ADODB;

type
  TfrmLogin = class(TForm)
    Panel1: TPanel;
    btnEntrar: TButton;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    ADOFuncionarioLogar: TADOStoredProc;
    srcGrupoPedidoRealizado: TDataSource;
    editUsuario: TEdit;
    editSenha: TEdit;
    ADOFuncionarioLogaracessoLiberado: TBooleanField;
    ADOFuncionarioLogaradministrador: TBooleanField;
    procedure btnEntrarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmLogin: TfrmLogin;

implementation

{$R *.dfm}

uses untHome;

procedure TfrmLogin.btnEntrarClick(Sender: TObject);
begin
  ADOFuncionarioLogar.Close;
  ADOFuncionarioLogar.Parameters.ParamByName('@nomeUsuario').Value  := editUsuario.Text;
  ADOFuncionarioLogar.Parameters.ParamByName('@nomeSenha').Value    := editSenha.Text;
  ADOFuncionarioLogar.Open;
  //
  if ADOFuncionarioLogar.FieldByName('acessoLiberado').AsBoolean then
  begin
  frmHome := TfrmHome.Create(Self);
  frmHome.ativoAdministrador := ADOFuncionarioLogar.FieldByName('ativoAdministrador').AsBoolean;
  //
  frmHome.Show;
  end
  else
  begin
    showmessage('Usuário ou senha inválidos.');
    editSenha.Text := '';
  end;
end;

end.
